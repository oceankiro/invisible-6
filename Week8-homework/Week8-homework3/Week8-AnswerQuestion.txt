1. 問題1：什麼是 Ajax？
    Ajax 全名為 Asynchronous Javascript And XML，是指任何非同步的 JS 跟伺服器交換資料，都可以說是「AJAX」。
    早期都用 XML 格式來傳輸，如今可以用 JSON、XML、TXT 純文字。
    在技術上來講，Ajax 可以讓網頁在背景中請求資料並更新頁面，而使用者就不用特別手動去刷新。
    運作流程來說，先使用 JS 建立伺服器請求，透過 XMLHttpRequest(或 fetch api)提出請求到伺服器，再讓伺服器返回資料，
    使用 JS 讓網頁做部分更新。

2.問題2：用 Ajax 與我們用表單送出資料的差別在哪？
    簡單來說，傳統利用 GET 或 POST 提出請求的方式，會需要讓整個瀏覽器頁面重新導入(或導向另一個URL)；
    而 Ajax 則可以在背景做非同步的資料傳輸，不需要整個頁面全部更新載入，可以用作即時更新資訊的功能。

3.問題3：JSONP 是什麼？
    JSONP 全名為 JSON with Padding，是一種解決「跨區域請求限制」的技術，由於資料傳輸有所謂的「同源政策」，用來限制
    不同來源的資料共享，意思是需要有相同的協議(HTTP/HTTPS)、主機(Domain)、埠號(Port)才可以拿取資料，不同源的網站會
    無法存取(會被擋)。
    而可以使用 JSONP、CORS來解決，其中 JSONP 是利用<Script>標籤不受同源政策的限制，將資料包裹其中來成功獲取資料。
    技術上來說，是通過<Script>標籤內插入<src>圖片屬性，在其中輸入目標網址，並且指定要調回的「函數名稱」資料，在資料
    返回後，在我們這端執行處理 Function 資料。

4.問題4：要如何存取跨網域的 API？
    除了上題所提到的 JSONP 可以跨域存取資料，還有 CORS 可以解決同源政策的限制。
    伺服器端可以透過在伺服器回應的 Header 加入"Access-control-allow-origin"或用"*"來允許所有存取。
    那如果沒有設定，客戶端這邊是無法存取的。

5.問題5：為什麼我們在第四週時沒碰到跨網域的問題，這週（觀看 JS102 影片的時候）卻碰到了？
    應該是因為當時都在「相同的協議」下去存取資料，或只是用作教學提供的 api 是已經設定 CORS 的，所以請求資料未受阻擋。
    但答案是什麼我無從得知，我這邊完全沒有教學的 API (兩手一攤)只能用本機資料來做作業。所以跳過吧。